version: '3.8'
services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    image: healthcare-backend:latest
    container_name: healthcarebackend-api-1
    ports:
      - "8088:8088"
      - "5555:5555"
    env_file:
      - .env.production
    environment:
      NODE_ENV: production
      VIRTUAL_HOST: api.ishswami.in
      VIRTUAL_PORT: 8088
      CORS_ORIGIN: https://ishswami.in
      FRONTEND_URL: https://ishswami.in
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/userdb?schema=public
      REDIS_HOST: redis
      TRUST_PROXY: 1
    volumes:
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network
      - nginx-proxy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8088/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: userdb
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data/pgdata
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s
    restart: unless-stopped

  redis:
    image: redis:latest
    container_name: healthcarebackend-redis-1
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: healthcarebackend-redis-commander-1
    ports:
      - "8082:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
      - HTTP_USER=admin
      - HTTP_PASSWORD=admin
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8081 || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  nginx-proxy:
    image: nginxproxy/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - nginx_certs:/etc/nginx/certs
      - nginx_vhost:/etc/nginx/vhost.d
      - nginx_html:/usr/share/nginx/html
      - ./nginx/conf.d:/etc/nginx/conf.d
    environment:
      ENABLE_IPV6: "true"
    networks:
      - nginx-proxy
    restart: unless-stopped

  acme-companion:
    image: nginxproxy/acme-companion
    container_name: nginx-proxy-acme
    volumes_from:
      - nginx-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - acme:/etc/acme.sh
    environment:
      DEFAULT_EMAIL: your-email@example.com
    depends_on:
      - nginx-proxy
    networks:
      - nginx-proxy
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  nginx_certs:
  nginx_vhost:
  nginx_html:
  acme:

networks:
  app-network:
    driver: bridge
  nginx-proxy:
    external: true
 