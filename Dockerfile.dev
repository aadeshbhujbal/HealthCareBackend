FROM node:20-alpine

# Label the development image
LABEL app.component=backend
LABEL app.stage=development
LABEL app.type=api

# Install necessary tools in a single layer
RUN apk add --no-cache \
    postgresql-client \
    redis \
    busybox-extras \
    python3 \
    make \
    g++ \
    wget \
    curl \
    && rm -rf /var/cache/apk/*

WORKDIR /app

# Copy package files and install dependencies
COPY package*.json ./
RUN npm install --legacy-peer-deps --no-audit --no-progress && \
    npm install -g nodemon && \
    npm cache clean --force

# Copy application files
COPY . .

# Create necessary directories with proper permissions
RUN mkdir -p /app/dist/shared/database/prisma && \
    mkdir -p /app/logs && \
    chmod -R 777 /app/dist && \
    chmod -R 777 /app/logs

# Environment-specific configurations
ENV PRISMA_SCHEMA_PATH=/app/src/shared/database/prisma/schema.prisma \
    NODE_ENV=development \
    HOST=0.0.0.0 \
    PORT=8088

# Validate and set up Prisma
RUN if [ -f "$PRISMA_SCHEMA_PATH" ]; then \
    echo "Using Prisma schema at $PRISMA_SCHEMA_PATH"; \
    npx prisma generate --schema="$PRISMA_SCHEMA_PATH"; \
    cp -r /app/src/shared/database/prisma/schema.prisma /app/dist/shared/database/prisma/; \
    else \
    echo "Prisma schema not found at $PRISMA_SCHEMA_PATH, using fallback path"; \
    cp -r /app/src/shared/database/prisma/schema.prisma /app/dist/shared/database/prisma/; \
    npx prisma generate --schema=/app/src/shared/database/prisma/schema.prisma; \
    fi

# Make scripts executable
RUN if [ -f "/app/src/shared/database/prisma/wait-for-postgres.sh" ]; then chmod +x /app/src/shared/database/prisma/wait-for-postgres.sh; fi

# Set proper permissions for hot reloading
RUN chmod -R 777 /app

# Expose ports
EXPOSE 8088 5555

# Add healthcheck
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:8088/health || exit 1

# Entry point with improved startup sequence
CMD ["sh", "-c", "\
    echo 'Setting up development environment...' && \
    mkdir -p /app/dist/shared/database/prisma && \
    cp -r /app/src/shared/database/prisma/schema.prisma /app/dist/shared/database/prisma/ && \
    echo 'Starting development server...' && \
    npm run start:dev"] 