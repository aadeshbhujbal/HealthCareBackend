FROM node:20-alpine

# Label the development image
LABEL app.component=backend
LABEL app.stage=development

# Install necessary tools in a single layer
RUN apk add --no-cache postgresql-client redis busybox-extras python3 make g++ && \
    rm -rf /var/cache/apk/*

WORKDIR /app

# Copy package files and install dependencies
COPY package*.json ./
RUN npm install --legacy-peer-deps --no-audit --no-progress && \
    npm install -g nodemon && \
    npm cache clean --force

# Copy application files
COPY . .

# Ensure dist directory exists and has proper permissions
RUN mkdir -p /app/dist && chmod -R 777 /app/dist

# Environment-specific configurations will be passed from docker-compose.yml
# This allows using different schema paths based on environment
# but we do need to set a default (will be overridden by docker-compose)
ENV PRISMA_SCHEMA_PATH=/app/src/shared/database/prisma/schema.prisma

# Validate and properly set up Prisma
RUN if [ -f "$PRISMA_SCHEMA_PATH" ]; then \
    echo "Using Prisma schema at $PRISMA_SCHEMA_PATH"; \
    npx prisma generate --schema="$PRISMA_SCHEMA_PATH"; \
    mkdir -p /app/dist/shared/database/prisma && \
    cp -r /app/src/shared/database/prisma/schema.prisma /app/dist/shared/database/prisma/; \
    else \
    echo "Prisma schema not found at $PRISMA_SCHEMA_PATH, using fallback path"; \
    mkdir -p /app/dist/shared/database/prisma && \
    cp -r /app/src/shared/database/prisma/schema.prisma /app/dist/shared/database/prisma/; \
    npx prisma generate --schema=/app/src/shared/database/prisma/schema.prisma; \
    fi

# Make the script executable if it exists
RUN if [ -f "/app/src/shared/database/prisma/wait-for-postgres.sh" ]; then chmod +x /app/src/shared/database/prisma/wait-for-postgres.sh; fi

# Set proper permissions for hot reloading
RUN chmod -R 777 /app

# Expose ports
EXPOSE 8088 5555

# Add healthcheck
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:8088/health || exit 1

# Entry point that ensures Prisma schema exists in both source and dist
CMD ["sh", "-c", "mkdir -p /app/dist/shared/database/prisma && cp -r /app/src/shared/database/prisma/schema.prisma /app/dist/shared/database/prisma/ && npm run start:dev"] 