upstream api_backend {
    server api:8088;
    keepalive 32;
}

# HTTP redirect to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name api.ishswami.in;
    
    # Redirect all HTTP traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }

    # Allow health checks on HTTP
    location /health {
        proxy_pass http://api_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        access_log off;
        add_header Content-Type application/json;
    }
}

# HTTPS server
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name api.ishswami.in;

    # SSL configuration
    ssl_certificate /etc/nginx/ssl/api.ishswami.in.crt;
    ssl_certificate_key /etc/nginx/ssl/api.ishswami.in.key;
    
    # SSL session settings
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    ssl_buffer_size 4k;

    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # HSTS (enable only after confirming HTTPS works)
    add_header Strict-Transport-Security "max-age=63072000" always;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' https: http: data: blob: 'unsafe-inline' 'unsafe-eval'" always;

    # Logs
    access_log /var/log/nginx/api_access.log combined buffer=512k flush=1m;
    error_log /var/log/nginx/api_error.log warn;

    # Proxy headers
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Port $server_port;

    # WebSocket configuration
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    # API endpoints
    location / {
        proxy_pass https://api_backend;  # Changed to HTTPS
        proxy_buffering off;
        proxy_request_buffering off;
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
        proxy_send_timeout 300s;
        
        # CORS headers
        add_header 'Access-Control-Allow-Origin' 'https://ishswami.in' always;  # Restricted to frontend domain
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        # Error handling
        proxy_intercept_errors on;
        error_page 404 = @notfound;
        error_page 502 503 504 = @backend_down;
    }

    # WebSocket endpoint
    location /socket.io/ {
        proxy_pass https://api_backend;  # Changed to HTTPS
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 86400s;  # 24h for long-running connections
        proxy_send_timeout 86400s;
        proxy_buffering off;
        
        # WebSocket specific CORS
        add_header 'Access-Control-Allow-Origin' 'https://ishswami.in' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
    }

    # Health check endpoint
    location /health {
        proxy_pass https://api_backend/health;  # Changed to HTTPS
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        access_log off;
        add_header Content-Type application/json;
        
        # Allow health checks without authentication
        auth_basic off;
    }

    # Swagger documentation
    location /docs {
        proxy_pass https://api_backend;  # Changed to HTTPS
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_buffering off;
    }

    # Error handling locations
    location @notfound {
        return 404 '{"error": "Not Found", "message": "The requested resource was not found"}';
        add_header Content-Type application/json always;
    }

    location @backend_down {
        return 503 '{"error": "Service Unavailable", "message": "The service is temporarily unavailable"}';
        add_header Content-Type application/json always;
    }

    # Deny access to . files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
} 